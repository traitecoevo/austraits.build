# This file is automatically generated from traits.build
# package, via the file remake.yml.whisker:
# edit the file there (or the files that it includes).

packages:
  - traits.build

targets:

# Define generic targets
  all:
    depends:
      - {{database_name}}
      - export/data/curr/{{database_name}}.rds
      - export/data/curr/{{database_name}}_flat.rds

# Load data resources
  schema:
    command: get_schema()

  resource_metadata:
    command: get_schema("config/metadata.yml",  I("metadata"))

  definitions:
    command: get_schema("config/traits.yml", I("traits"))

  unit_conversions:
    command: get_unit_conversions("config/unit_conversions.csv")

  taxon_list:
    command: read_csv_char("config/taxon_list.csv")

# Build each source
{{#dataset_ids}}
  {{dataset_id}}_config:
    command: >
      dataset_configure("{{path}}/{{dataset_id}}/metadata.yml",
                 definitions
                 )
  {{dataset_id}}_raw:
    command: >
      dataset_process("{{path}}/{{dataset_id}}/data.csv",
                  {{dataset_id}}_config,
                  schema,
                  resource_metadata,
                  unit_conversions
                 )
  {{dataset_id}}:
    command: >
      dataset_update_taxonomy({{dataset_id}}_raw,
                  taxon_list
                 )

{{/dataset_ids}}

  {{database_name}}_raw:
    command: >
      bind_databases(
{{#dataset_ids}}
        {{dataset_id}},
{{/dataset_ids}}
        I(NULL))

# Version information
  version_number:
    command: util_get_version("config/metadata.yml")

  git_SHA:
    command: util_get_SHA()
    depends:
      - .git/index

# Combine all the source into one resource
  {{database_name}}:
    command: build_add_version({{database_name}}_raw, version_number, git_SHA)

# Create flattened database
  {{database_name}}_flat:
    command: flatten_database({{database_name}})

# Save to file
  export/data/curr/{{database_name}}.rds:
    command: saveRDS({{database_name}}, target_name)
  
# Save flattened version to file  
  export/data/curr/{{database_name}}_flat.rds:
    command: saveRDS({{database_name}}_flat, target_name)